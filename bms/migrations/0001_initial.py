# Generated by Django 2.1.1 on 2018-09-25 07:04

import bms.models.agency_model
import bms.models.fund_model
import bms.models.org_model
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('identity', models.CharField(choices=[('org', '机构管理员'), ('agency', '代理管理员'), ('admin', '后台管理员')], default='admin', max_length=10, verbose_name='管理员身份')),
                ('position', models.CharField(blank=True, max_length=100, null=True, verbose_name='职位')),
                ('mobile_phone', models.CharField(blank=True, max_length=100, null=True, verbose_name='手机号码')),
                ('operator', models.CharField(blank=True, max_length=50, verbose_name='添加者')),
            ],
            options={
                'verbose_name': '后台用户',
                'verbose_name_plural': '后台用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Agency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='名称')),
                ('rebate_x', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True, verbose_name='返佣参数X')),
                ('rebate_y', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True, verbose_name='返佣参数Y')),
                ('rebate_z', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True, verbose_name='返佣参数Z')),
                ('allow_business', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('options', '期权交易'), ('margin', '融资融券')], max_length=14, null=True, verbose_name='允许的业务类型')),
                ('grade', models.IntegerField(blank=True, null=True, verbose_name='归属等级')),
                ('invite_num', models.CharField(default=bms.models.agency_model.invite_num_key, help_text='作为邀请客户开户ID', max_length=100, verbose_name='邀请码')),
                ('is_freeze', models.BooleanField(default=False, help_text='冻结情况下，归属不能出金或新开客户', verbose_name='能否冻结')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='添加时间')),
                ('operator', models.CharField(blank=True, max_length=50, verbose_name='添加者')),
                ('f_agency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bms.Agency', verbose_name='上级归属')),
            ],
            options={
                'verbose_name': '归属',
                'verbose_name_plural': '归属',
            },
        ),
        migrations.CreateModel(
            name='Change_Info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initiator', models.CharField(max_length=100, verbose_name='发起者')),
                ('receiver', models.CharField(max_length=100, verbose_name='接受者')),
                ('event_type', models.CharField(choices=[('DEBUG', '调试'), ('INFO', '信息'), ('WARNING', '警告'), ('ERROR', '错误')], default='back', max_length=32, verbose_name='变更类型')),
                ('event', models.TextField(verbose_name='具体事件内容')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='操作时间')),
            ],
            options={
                'verbose_name': '日志记录',
                'verbose_name_plural': '日志记录',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='用户名')),
                ('mobile_phone', models.CharField(max_length=100, verbose_name='手机号码')),
                ('mailbox', models.EmailField(max_length=254, verbose_name='邮箱地址')),
                ('password', models.CharField(max_length=128, verbose_name='密码')),
                ('identity_card', models.CharField(blank=True, max_length=128, null=True, verbose_name='身份证')),
                ('bank_card', models.CharField(blank=True, max_length=128, null=True, verbose_name='银行卡号')),
                ('bank_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='开户银行')),
                ('open_province', models.CharField(blank=True, max_length=128, null=True, verbose_name='开户省份')),
                ('open_city', models.CharField(blank=True, max_length=128, null=True, verbose_name='开户市')),
                ('bank_branch', models.CharField(blank=True, max_length=128, null=True, verbose_name='开户支行')),
                ('status', models.CharField(choices=[('1', '已开户待提审'), ('2', '已提审待审核'), ('3', '已审核待入金'), ('4', '已入金待交易'), ('5', '已交易')], default='1', max_length=10, verbose_name='状态')),
                ('is_freeze', models.BooleanField(default=False, verbose_name='能否冻结')),
                ('allow_business', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('options', '期权交易'), ('margin', '融资融券')], max_length=14, null=True, verbose_name='允许的业务类型')),
                ('web_app', models.CharField(choices=[('web', '网页申请'), ('app', '手机申请'), ('back', '后台录入')], default='app', max_length=32, verbose_name='申请端口')),
                ('last_login_time', models.DateTimeField(blank=True, null=True, verbose_name='最后登陆时间')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='注册时间')),
                ('operator', models.CharField(blank=True, max_length=50, verbose_name='添加者')),
                ('agency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bms.Agency', verbose_name='所属代理')),
            ],
            options={
                'verbose_name': '客户',
                'verbose_name_plural': '客户',
            },
        ),
        migrations.CreateModel(
            name='Exchange_Rule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin_time', models.TimeField(default='00:00:00', verbose_name='开始时间')),
                ('end_time', models.TimeField(default='23:59:59', verbose_name='结束时间')),
                ('week', multiselectfield.db.fields.MultiSelectField(choices=[('Monday', '星期一'), ('Tuesday', '星期二'), ('Wednesday', '星期三'), ('Thursday', '星期四'), ('Friday', '星期五'), ('Saturday', '星期六'), ('Sunday', '星期日')], max_length=56, verbose_name='星期')),
                ('option_type', models.CharField(choices=[('commodity', '商品期权'), ('stock', '个股期权')], max_length=32, verbose_name='期权类型')),
                ('type', models.CharField(choices=[('enquiry', '询价时间设置'), ('order', '下单时间设置'), ('close', '平仓时间设置')], max_length=32, verbose_name='所属类型')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='操作时间')),
                ('operator', models.CharField(blank=True, max_length=50, verbose_name='添加者')),
            ],
            options={
                'verbose_name': '交易询价时间设置',
                'verbose_name_plural': '交易询价时间设置',
            },
        ),
        migrations.CreateModel(
            name='Fund_Detail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(default=bms.models.fund_model.random_key, max_length=100, verbose_name='订单号')),
                ('change_type', models.CharField(choices=[('in_online', '网银入金'), ('in_offline', '线下入金'), ('out_online', '网银出金'), ('out_offline', '线下出金'), ('order', '下单'), ('close', '结算')], default='order', max_length=32, verbose_name='变更类型')),
                ('balance_before', models.DecimalField(decimal_places=3, max_digits=12, null=True, verbose_name='交易前余额')),
                ('balance_after', models.DecimalField(decimal_places=3, max_digits=12, null=True, verbose_name='交易后余额')),
                ('balance_change', models.DecimalField(decimal_places=3, max_digits=12, null=True, verbose_name='余额变化')),
                ('frozen_balance', models.DecimalField(decimal_places=3, max_digits=12, null=True, verbose_name='交易后冻结余额')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='操作时间')),
                ('operator', models.CharField(blank=True, max_length=50, verbose_name='添加者')),
            ],
            options={
                'verbose_name': '资金流水明细',
                'verbose_name_plural': '资金流水明细',
            },
        ),
        migrations.CreateModel(
            name='Fund_In_Rule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin_time', models.TimeField(default='00:00:00', verbose_name='开始时间')),
                ('end_time', models.TimeField(default='23:59:59', verbose_name='结束时间')),
                ('week', multiselectfield.db.fields.MultiSelectField(choices=[('Monday', '星期一'), ('Tuesday', '星期二'), ('Wednesday', '星期三'), ('Thursday', '星期四'), ('Friday', '星期五'), ('Saturday', '星期六'), ('Sunday', '星期日')], max_length=56, verbose_name='星期')),
                ('min_gateway', models.DecimalField(decimal_places=2, max_digits=12, null=True, verbose_name='网关单笔最小入金金额')),
                ('min_shortcut', models.DecimalField(decimal_places=2, max_digits=12, null=True, verbose_name='快捷单笔最小入金金额')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='操作时间')),
                ('operator', models.CharField(blank=True, max_length=50, verbose_name='添加者')),
            ],
            options={
                'verbose_name': '入金限制表',
                'verbose_name_plural': '入金限制表',
            },
        ),
        migrations.CreateModel(
            name='Fund_Out_Rule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin_time', models.TimeField(default='00:00:00', verbose_name='开始时间')),
                ('end_time', models.TimeField(default='23:59:59', verbose_name='结束时间')),
                ('week', multiselectfield.db.fields.MultiSelectField(choices=[('Monday', '星期一'), ('Tuesday', '星期二'), ('Wednesday', '星期三'), ('Thursday', '星期四'), ('Friday', '星期五'), ('Saturday', '星期六'), ('Sunday', '星期日')], max_length=56, verbose_name='星期')),
                ('max_count_each_day', models.IntegerField(verbose_name='单日最大出金次数')),
                ('max_money_each_day', models.DecimalField(decimal_places=2, max_digits=12, null=True, verbose_name='单日最大出金金额')),
                ('max_money_each_time', models.DecimalField(decimal_places=2, max_digits=12, null=True, verbose_name='单笔最大出金金额')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='操作时间')),
                ('operator', models.CharField(blank=True, max_length=50, verbose_name='添加者')),
            ],
            options={
                'verbose_name': '出金限制表',
                'verbose_name_plural': '出金限制表',
            },
        ),
        migrations.CreateModel(
            name='Group_Template',
            fields=[
                ('group_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.Group')),
                ('temp_name', models.CharField(help_text='这个名称将作为正式名称的后缀', max_length=100, verbose_name='模板名称')),
                ('type', models.CharField(choices=[('org', '机构模板'), ('agency', '代理模板')], max_length=50, verbose_name='模板类型')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='注册时间')),
                ('operator', models.CharField(blank=True, max_length=50, verbose_name='添加者')),
            ],
            options={
                'verbose_name': '组模板',
                'verbose_name_plural': '组模板',
            },
            bases=('auth.group',),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menu_name', models.CharField(max_length=100, verbose_name='菜单名')),
                ('menu_url', models.CharField(max_length=500, verbose_name='菜单链接')),
                ('order_num', models.IntegerField(verbose_name='排序')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='操作时间')),
                ('operator', models.CharField(blank=True, max_length=50, verbose_name='添加者')),
                ('f_menu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bms.Menu', verbose_name='父菜单')),
            ],
            options={
                'verbose_name': '菜单管理',
                'verbose_name_plural': '菜单管理',
            },
        ),
        migrations.CreateModel(
            name='Notional_Principal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_type', models.CharField(choices=[('commodity', '商品期权'), ('stock', '个股期权')], max_length=32, verbose_name='期权类型')),
                ('number', models.DecimalField(decimal_places=2, max_digits=12, null=True, verbose_name='名义本金数额')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='操作时间')),
                ('operator', models.CharField(blank=True, max_length=50, verbose_name='添加者')),
            ],
            options={
                'verbose_name': '名义本金设置',
                'verbose_name_plural': '名义本金设置',
            },
        ),
        migrations.CreateModel(
            name='Org_Rule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract', models.CharField(blank=True, default='all', max_length=100, null=True, verbose_name='合约代码')),
                ('op_type', models.CharField(choices=[('commodity', '商品期权'), ('stock', '个股期权')], max_length=32, verbose_name='期权类型')),
                ('rebate_x', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='参数X')),
                ('rebate_y', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='参数Y')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='添加时间')),
                ('operator', models.CharField(blank=True, max_length=50, verbose_name='添加者')),
            ],
            options={
                'verbose_name': '机构费率规则',
                'verbose_name_plural': '机构费率规则',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='名称')),
                ('logo', models.ImageField(upload_to=bms.models.org_model.logo_path_handler, verbose_name='logo')),
                ('cachet', models.ImageField(upload_to=bms.models.org_model.cachet_path_handler, verbose_name='公章')),
                ('account', models.CharField(max_length=200, verbose_name='账户')),
                ('allow_business', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('options', '期权交易'), ('margin', '融资融券')], max_length=14, null=True, verbose_name='允许的业务类型')),
                ('is_freeze', models.BooleanField(default=False, verbose_name='能否冻结')),
                ('is_open_commodity', models.BooleanField(default=False, verbose_name='是否开启商品费率')),
                ('is_open_stock', models.BooleanField(default=False, verbose_name='是否开启个股费率')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='添加时间')),
                ('operator', models.CharField(blank=True, max_length=50, verbose_name='添加者')),
            ],
            options={
                'verbose_name': '机构',
                'verbose_name_plural': '机构',
            },
        ),
        migrations.CreateModel(
            name='Special_Group',
            fields=[
                ('group_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.Group')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='添加时间')),
                ('operator', models.CharField(blank=True, max_length=50, verbose_name='添加者')),
                ('agency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bms.Agency', verbose_name='所属代理')),
                ('org', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bms.Organization', verbose_name='所属机构')),
            ],
            options={
                'verbose_name': '特别组',
                'verbose_name_plural': '特别组',
            },
            bases=('auth.group',),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='Agency_User',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='后台用户')),
                ('operator', models.CharField(blank=True, max_length=50, verbose_name='添加者')),
            ],
            options={
                'verbose_name': '归属后台用户',
                'verbose_name_plural': '归属后台用户',
            },
        ),
        migrations.CreateModel(
            name='Org_User',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='后台用户')),
                ('operator', models.CharField(blank=True, max_length=50, verbose_name='添加者')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bms.Organization', verbose_name='所属机构')),
            ],
            options={
                'verbose_name': '机构后台用户',
                'verbose_name_plural': '机构后台用户',
            },
        ),
        migrations.AddField(
            model_name='org_rule',
            name='org',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bms.Organization', verbose_name='所属机构'),
        ),
        migrations.AddField(
            model_name='notional_principal',
            name='org',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bms.Organization', verbose_name='所属机构'),
        ),
        migrations.AddField(
            model_name='fund_out_rule',
            name='org',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bms.Organization', verbose_name='所属机构'),
        ),
        migrations.AddField(
            model_name='fund_in_rule',
            name='org',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bms.Organization', verbose_name='所属机构'),
        ),
        migrations.AddField(
            model_name='fund_detail',
            name='client',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bms.Menu', verbose_name='客户'),
        ),
        migrations.AddField(
            model_name='exchange_rule',
            name='org',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bms.Organization', verbose_name='所属机构'),
        ),
        migrations.AddField(
            model_name='client',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bms.Organization', verbose_name='所属机构'),
        ),
        migrations.AddField(
            model_name='agency',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bms.Organization', verbose_name='所属机构'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='agency_user',
            name='agency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bms.Agency', verbose_name='所属代理'),
        ),
    ]
